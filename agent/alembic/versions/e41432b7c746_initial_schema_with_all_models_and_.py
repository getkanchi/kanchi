"""Initial schema with all models and indexes

Revision ID: e41432b7c746
Revises: 
Create Date: 2025-10-05 10:20:08.350720

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e41432b7c746'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('retry_relationships',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.String(length=255), nullable=False),
    sa.Column('original_id', sa.String(length=255), nullable=False),
    sa.Column('retry_chain', sa.JSON(), nullable=True),
    sa.Column('total_retries', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_retry_bulk_lookup', 'retry_relationships', ['task_id', 'original_id'], unique=False)
    op.create_index(op.f('ix_retry_relationships_original_id'), 'retry_relationships', ['original_id'], unique=False)
    op.create_index(op.f('ix_retry_relationships_task_id'), 'retry_relationships', ['task_id'], unique=True)
    op.create_table('task_events',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.String(length=255), nullable=False),
    sa.Column('task_name', sa.String(length=255), nullable=True),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('hostname', sa.String(length=255), nullable=True),
    sa.Column('worker_name', sa.String(length=255), nullable=True),
    sa.Column('queue', sa.String(length=255), nullable=True),
    sa.Column('exchange', sa.String(length=255), nullable=True),
    sa.Column('routing_key', sa.String(length=255), nullable=True),
    sa.Column('root_id', sa.String(length=255), nullable=True),
    sa.Column('parent_id', sa.String(length=255), nullable=True),
    sa.Column('args', sa.JSON(), nullable=True),
    sa.Column('kwargs', sa.JSON(), nullable=True),
    sa.Column('retries', sa.Integer(), nullable=True),
    sa.Column('eta', sa.String(length=50), nullable=True),
    sa.Column('expires', sa.String(length=50), nullable=True),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('runtime', sa.Float(), nullable=True),
    sa.Column('exception', sa.Text(), nullable=True),
    sa.Column('traceback', sa.Text(), nullable=True),
    sa.Column('retry_of', sa.String(length=255), nullable=True),
    sa.Column('retried_by', sa.Text(), nullable=True),
    sa.Column('is_retry', sa.Boolean(), nullable=True),
    sa.Column('has_retries', sa.Boolean(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('is_orphan', sa.Boolean(), nullable=True),
    sa.Column('orphaned_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_active_tasks', 'task_events', ['event_type', 'timestamp'], unique=False)
    op.create_index('idx_aggregation_optimized', 'task_events', ['task_id', 'timestamp', 'event_type'], unique=False)
    op.create_index('idx_event_type_timestamp', 'task_events', ['event_type', 'timestamp'], unique=False)
    op.create_index('idx_hostname_routing', 'task_events', ['hostname', 'routing_key', 'timestamp'], unique=False)
    op.create_index('idx_orphan_lookup', 'task_events', ['is_orphan', 'orphaned_at'], unique=False)
    op.create_index('idx_recent_events_optimized', 'task_events', ['timestamp', 'event_type', 'task_id'], unique=False)
    op.create_index('idx_retry_tracking', 'task_events', ['task_id', 'is_retry', 'retry_of'], unique=False)
    op.create_index('idx_routing_key_timestamp', 'task_events', ['routing_key', 'timestamp'], unique=False)
    op.create_index('idx_task_name_search', 'task_events', ['task_name', 'timestamp'], unique=False)
    op.create_index('idx_task_timestamp', 'task_events', ['task_id', 'timestamp'], unique=False)
    op.create_index(op.f('ix_task_events_event_type'), 'task_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_task_events_is_orphan'), 'task_events', ['is_orphan'], unique=False)
    op.create_index(op.f('ix_task_events_parent_id'), 'task_events', ['parent_id'], unique=False)
    op.create_index(op.f('ix_task_events_retry_of'), 'task_events', ['retry_of'], unique=False)
    op.create_index(op.f('ix_task_events_root_id'), 'task_events', ['root_id'], unique=False)
    op.create_index(op.f('ix_task_events_task_id'), 'task_events', ['task_id'], unique=False)
    op.create_index(op.f('ix_task_events_task_name'), 'task_events', ['task_name'], unique=False)
    op.create_index(op.f('ix_task_events_timestamp'), 'task_events', ['timestamp'], unique=False)
    op.create_table('task_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('total_tasks', sa.Integer(), nullable=True),
    sa.Column('succeeded', sa.Integer(), nullable=True),
    sa.Column('failed', sa.Integer(), nullable=True),
    sa.Column('pending', sa.Integer(), nullable=True),
    sa.Column('retried', sa.Integer(), nullable=True),
    sa.Column('active', sa.Integer(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('worker_events',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('hostname', sa.String(length=255), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('active_tasks', sa.JSON(), nullable=True),
    sa.Column('processed', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_worker_heartbeat', 'worker_events', ['hostname', 'timestamp'], unique=False)
    op.create_index('idx_worker_status', 'worker_events', ['hostname', 'event_type', 'timestamp'], unique=False)
    op.create_index(op.f('ix_worker_events_hostname'), 'worker_events', ['hostname'], unique=False)
    op.create_index(op.f('ix_worker_events_timestamp'), 'worker_events', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_worker_events_timestamp'), table_name='worker_events')
    op.drop_index(op.f('ix_worker_events_hostname'), table_name='worker_events')
    op.drop_index('idx_worker_status', table_name='worker_events')
    op.drop_index('idx_worker_heartbeat', table_name='worker_events')
    op.drop_table('worker_events')
    op.drop_table('task_stats')
    op.drop_index(op.f('ix_task_events_timestamp'), table_name='task_events')
    op.drop_index(op.f('ix_task_events_task_name'), table_name='task_events')
    op.drop_index(op.f('ix_task_events_task_id'), table_name='task_events')
    op.drop_index(op.f('ix_task_events_root_id'), table_name='task_events')
    op.drop_index(op.f('ix_task_events_retry_of'), table_name='task_events')
    op.drop_index(op.f('ix_task_events_parent_id'), table_name='task_events')
    op.drop_index(op.f('ix_task_events_is_orphan'), table_name='task_events')
    op.drop_index(op.f('ix_task_events_event_type'), table_name='task_events')
    op.drop_index('idx_task_timestamp', table_name='task_events')
    op.drop_index('idx_task_name_search', table_name='task_events')
    op.drop_index('idx_routing_key_timestamp', table_name='task_events')
    op.drop_index('idx_retry_tracking', table_name='task_events')
    op.drop_index('idx_recent_events_optimized', table_name='task_events')
    op.drop_index('idx_orphan_lookup', table_name='task_events')
    op.drop_index('idx_hostname_routing', table_name='task_events')
    op.drop_index('idx_event_type_timestamp', table_name='task_events')
    op.drop_index('idx_aggregation_optimized', table_name='task_events')
    op.drop_index('idx_active_tasks', table_name='task_events')
    op.drop_table('task_events')
    op.drop_index(op.f('ix_retry_relationships_task_id'), table_name='retry_relationships')
    op.drop_index(op.f('ix_retry_relationships_original_id'), table_name='retry_relationships')
    op.drop_index('idx_retry_bulk_lookup', table_name='retry_relationships')
    op.drop_table('retry_relationships')
    # ### end Alembic commands ###
